from database.db import conectar


def criar_tabela():
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("""
        BEGIN
            EXECUTE IMMEDIATE '
                CREATE TABLE usuarios (
                    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    nome VARCHAR2(100) NOT NULL,
                    email VARCHAR2(255) UNIQUE NOT NULL
                )';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -955 THEN -- Ignora o erro de "tabela j√° existe"
                    RAISE;
                END IF;
        END;
    """)
    conn.commit()
    conn.close()


def inserir_usuario(nome, email):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO usuarios (nome, email) VALUES (:nome, :email)", {
                   "nome": nome, "email": email})
    conn.commit()
    conn.close()


def listar_usuarios():
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM usuarios")
    usuarios = cursor.fetchall()
    conn.close()
    return usuarios


def excluir_usuario(user_id):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM usuarios WHERE id = :id", {"id": user_id})
    conn.commit()
    conn.close()


def buscar_usuario_por_id(user_id):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM usuarios WHERE id = :id", {"id": user_id})
    usuario = cursor.fetchone()
    conn.close()
    return usuario


def atualizar_usuario(user_id, nome, email):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("UPDATE usuarios SET nome = :nome, email = :email WHERE id = :id", {
                   "nome": nome, "email": email, "id": user_id})
    conn.commit()
    conn.close()
